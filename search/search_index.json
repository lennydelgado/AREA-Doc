{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Area Project Documentation","text":""},{"location":"#overview","title":"Overview","text":"<p>Welcome to the documentation for the Area project! This project is divided into three parts, each serving a specific purpose. Follow the instructions below to get the project and install the dependencies for each part.</p>"},{"location":"#getting-project","title":"Getting Project","text":"<p>To begin with, in order to use the project, you need to clone it using the following command:</p> <pre><code>git clone git@github.com:EpitechPromo2026/B-CPP-500-MAR-5-1-rtype-theo.liennard.git\n</code></pre> <p>Once you have obtained the project, navigate to it to install the dependencies in each part of projet.</p> <p>In the cloned project you will see three directory for each part</p> <pre><code>    AREA-API/\n    AREA-WEB/\n    AREA-MOBILE/\n</code></pre> <p>For each part you need to run the command bellow to download the dependancy.</p> <pre><code>    yarn\n</code></pre>"},{"location":"#conclusion","title":"Conclusion","text":"<p>Congratulations! You have successfully set up the Area project. If you encounter any issues or have questions, please refer to the project's documentation or seek help from the community. Happy coding!</p>"},{"location":"Api/developperGuide/","title":"API Developer guide","text":""},{"location":"Api/developperGuide/#introduction","title":"Introduction","text":"<p>The goal of this document is to describe the back-end of the Area application, for developers. With this guide, you will quickly be able to code and add your own actions and reactions!</p>"},{"location":"Api/developperGuide/#how-to-add-a-service","title":"How to add a service","text":""},{"location":"Api/developperGuide/#migration-and-model","title":"Migration and model","text":"<p>Firstly you need to change the migration and refresh it. When you clone the project, the service migration has token for gmail, spotify, discord, chatgpt and slack. You need to change the migration to accept the service access_token that you want to add.</p> <p>Once this is done, you need to do the same with the Service model.</p>"},{"location":"Api/developperGuide/#service-controller","title":"Service controller","text":"<p>Now, in the serviceController search for the addService function. This function is made to change the acceessToken easily, it has a switch_case to check which token it is trying to change and if it is available in the Service table. Simply add a case with your service name, and save the token in the database</p> <pre><code>service.service_token = token\n</code></pre> <p>One last step, if you wish to disconnect and delete the token, you need to do the same in deleteServices. Same switch case!</p>"},{"location":"Api/developperGuide/#how-to-add-an-automation","title":"How to add an automation","text":""},{"location":"Api/developperGuide/#how-is-this-working","title":"How is this working","text":"<p>We are using Adonis scheduler to call a Cron function every 1 minute. You can change the timer in the file CronEveryMinute in Tasks folder. The Cron function called is a parser. It will get very automations from every user, then parse the details.</p> <p>It will check what's the type of service, if the access_token is defined, then call the handle of the service.</p> <p>It will call all actions and reactions until the end of the automation.steps, which is the details of every action.</p> <p>Then in this handle it will parse what action is selected, and call the right function. Then, after the action is successful, it calls back to the automation parser without the last action called, so it's recursive but has an end.</p>"},{"location":"Api/developperGuide/#automationservice","title":"AutomationService","text":"<p>Now that you understand how is this working, let's add your action.</p> <p>First change the AutomationService file. In the handleAutomation there is the same kind of switch case set up than in services, you simply need to check for the type of action, which is your service name. Create a handleServiceAutomation(automation, accessToken) function to call the handle of your service.</p> <p>To verify if token is existent, change the switch case in getAcessTokenForService function. Same thing, add your service and return the token.</p> <p>Create a file for your services action in the same folder, create a first action with this definition:</p> <pre><code>export  default  async  function  handleSericeName(automation) {\n</code></pre> <p>Import this function in your automationService and call it in the handleServiceNameAutomation.  Now, when an action has your service as type, it will call the handle in your service file, and giving the details as arguments.</p>"},{"location":"Api/developperGuide/#yourserviceservice","title":"YourServiceService","text":"<p>Once you are in your handle, do a switch case to call the right action.</p> <p>The details of your action is in automation.steps[0] Then use .action to get the action name, .details for the details &gt; .detail1 .detail2 .detail3</p> <p>Do what you need to do with your action, use the accesstoken whenever needed, you are close to have finished!</p> <p>Once you called your action, you need to continue the chain.</p> <p>For that, check if the number of steps is superior to 1. If it is, shift the automation.steps json and call back handleAutomation with the new automation you created as parameter.</p> <pre><code>const  numberOfSteps = Object.keys(automation.steps).length\nautomation.steps.shift()\nif (numberOfSteps &gt; 1) {\n    handleAutomation(automation);\n}\n</code></pre> <p>That's it! Congrats for your first action!</p>"},{"location":"Api/developperGuide/#add-a-trigger","title":"Add a trigger","text":"<p>If you wish to add a trigger instead, follow the same steps, but in your trigger function return a boolean. True if the trigger is detected, false on default.</p> <p>Then, check that value and go to the next step only when it's true.</p> <pre><code>handleAutomation(automation);\n</code></pre>"},{"location":"Api/userGuide/","title":"Area Backend API Documentation","text":""},{"location":"Api/userGuide/#introduction","title":"Introduction","text":"<p>The Area Backend API allows users to configure and execute automation services. Users can manage their account, connect to third-party services, and define automation rules.</p>"},{"location":"Api/userGuide/#authentication","title":"Authentication","text":"<ul> <li>Endpoint: /users/register<ul> <li>Method: POST</li> <li>Description: Register a new user.</li> <li>Parameters: User registration data.</li> </ul> </li> <li>Endpoint: /users/login<ul> <li>Method: POST</li> <li>Description: Authenticate a user.</li> <li>Parameters: User credentials.</li> </ul> </li> <li>Endpoint: /users/update-password<ul> <li>Method: POST</li> <li>Description: Update user password.</li> <li>Parameters: New password.</li> </ul> </li> </ul>"},{"location":"Api/userGuide/#user-management","title":"User Management","text":"<ul> <li>Endpoint: /users/read<ul> <li>Method: GET</li> <li>Description: Retrieve user information.</li> <li>Authentication: Requires valid user token.</li> </ul> </li> </ul>"},{"location":"Api/userGuide/#third-party-integrations","title":"Third-party Integrations","text":"<ul> <li> <p>Endpoint: /api/spotify-credentials</p> <ul> <li>Method: GET</li> <li>Description: Retrieve Spotify API credentials.</li> <li>Authentication: Requires valid user token.</li> </ul> </li> <li> <p>Endpoint: /login/google, /google/callback, /login/facebook, /facebook/callback</p> <ul> <li>Description: OAuth2 login and callback for Google and Facebook.</li> </ul> </li> </ul>"},{"location":"Api/userGuide/#email-service","title":"Email Service","text":"<ul> <li>Endpoint: /send-email<ul> <li>Method: POST</li> <li>Description: Send an email.</li> <li>Parameters: Email content.</li> <li>Authentication: Requires valid user token.</li> </ul> </li> </ul>"},{"location":"Api/userGuide/#services-management","title":"Services Management","text":"<ul> <li> <p>Endpoint: /services/read</p> <ul> <li>Method: GET</li> <li>Description: Get configured services.</li> <li>Authentication: Requires login.</li> </ul> </li> <li> <p>Endpoint: /services/add</p> <ul> <li>Method: POST</li> <li>Description: Add a new service.</li> <li>Parameters: Service details.</li> <li>Authentication: Requires login.</li> </ul> </li> <li> <p>Endpoint: /services/delete</p> <ul> <li>Method: PUT</li> <li>Description: Delete a service.</li> <li>Parameters: Service ID.</li> <li>Authentication: Requires login.</li> </ul> </li> </ul>"},{"location":"Api/userGuide/#automations","title":"Automations","text":"<ul> <li> <p>Endpoint: /automations/create</p> <ul> <li>Method: POST</li> <li>Description: Create a new automation.</li> <li>Parameters: Automation details.</li> <li>Authentication: Requires valid user token.</li> </ul> </li> <li> <p>Endpoint: /automations/read</p> <ul> <li>Method: GET</li> <li>Description: Get user's automation rules.</li> <li>Authentication: Requires valid user token.</li> </ul> </li> <li> <p>Endpoint: /automations/modify</p> <ul> <li>Method: PUT</li> <li>Description: Modify an existing automation.</li> <li>Parameters: Automation details.</li> <li>Authentication: Requires valid user token.</li> </ul> </li> <li> <p>Endpoint: /automations/status</p> <ul> <li>Method: PUT</li> <li>Description: Change automation status (enable/disable).</li> <li>Parameters: Automation ID and status.</li> <li>Authentication: Requires valid user token.</li> </ul> </li> <li> <p>Endpoint: /automations/delete</p> <ul> <li>Method: DELETE</li> <li>Description: Delete an automation.</li> <li>Parameters: Automation ID.</li> <li>Authentication: Requires valid user token.</li> </ul> </li> </ul>"},{"location":"Api/userGuide/#discord-integration","title":"Discord Integration","text":"<ul> <li>Endpoint: /discord/oauth2/callback<ul> <li>Method: GET</li> <li>Description: Callback for Discord OAuth2.</li> <li>Authentication: Requires valid user token.</li> </ul> </li> </ul>"},{"location":"Mobile/developperGuide/","title":"R-TYPE Game Design","text":""},{"location":"Mobile/developperGuide/#introduction","title":"Introduction","text":"<p>The goal of this document is to describe the game design of the R-TYPE project. It will describe the game mechanics, the different entities and the different levels.</p>"},{"location":"Mobile/developperGuide/#game-mechanics","title":"Game Mechanics","text":""},{"location":"Mobile/developperGuide/#movement","title":"Movement","text":"Up Arrow Up Down Down Arrow Left Left Arrow Right Right Arrow"},{"location":"Mobile/developperGuide/#shooting","title":"Shooting","text":"Shoot Space"},{"location":"Mobile/developperGuide/#entities","title":"Entities","text":""},{"location":"Mobile/developperGuide/#player","title":"Player","text":"<p>The player is the entity controlled by the player. It can move in all directions and shoot.</p>"},{"location":"Mobile/developperGuide/#enemy","title":"Enemy","text":"<p>The enemy is an entity that moves in a predefined path and shoots at the player.</p>"},{"location":"Mobile/developperGuide/#level-editor","title":"Level Editor","text":"<p>The level editor is a tool that allows the user to create levels for the game. It will be used to create the levels of the game.</p>"},{"location":"Mobile/developperGuide/#controls","title":"Controls","text":"Left click Place and remove an entity Left arrow Move the camera left Right arrow Move the camera right L Key Load map S Key Save map"},{"location":"Mobile/userGuide/","title":"R-TYPE Game Design","text":""},{"location":"Mobile/userGuide/#introduction","title":"Introduction","text":"<p>The goal of this document is to describe the game design of the R-TYPE project. It will describe the game mechanics, the different entities and the different levels.</p>"},{"location":"Mobile/userGuide/#game-mechanics","title":"Game Mechanics","text":""},{"location":"Mobile/userGuide/#movement","title":"Movement","text":"Up Arrow Up Down Down Arrow Left Left Arrow Right Right Arrow"},{"location":"Mobile/userGuide/#shooting","title":"Shooting","text":"Shoot Space"},{"location":"Mobile/userGuide/#entities","title":"Entities","text":""},{"location":"Mobile/userGuide/#player","title":"Player","text":"<p>The player is the entity controlled by the player. It can move in all directions and shoot.</p>"},{"location":"Mobile/userGuide/#enemy","title":"Enemy","text":"<p>The enemy is an entity that moves in a predefined path and shoots at the player.</p>"},{"location":"Mobile/userGuide/#level-editor","title":"Level Editor","text":"<p>The level editor is a tool that allows the user to create levels for the game. It will be used to create the levels of the game.</p>"},{"location":"Mobile/userGuide/#controls","title":"Controls","text":"Left click Place and remove an entity Left arrow Move the camera left Right arrow Move the camera right L Key Load map S Key Save map"},{"location":"Web/developperGuide/","title":"R-TYPE Game Design","text":""},{"location":"Web/developperGuide/#introduction","title":"Introduction","text":"<p>The goal of this document is to describe the game design of the R-TYPE project. It will describe the game mechanics, the different entities and the different levels.</p>"},{"location":"Web/developperGuide/#game-mechanics","title":"Game Mechanics","text":""},{"location":"Web/developperGuide/#movement","title":"Movement","text":"Up Arrow Up Down Down Arrow Left Left Arrow Right Right Arrow"},{"location":"Web/developperGuide/#shooting","title":"Shooting","text":"Shoot Space"},{"location":"Web/developperGuide/#entities","title":"Entities","text":""},{"location":"Web/developperGuide/#player","title":"Player","text":"<p>The player is the entity controlled by the player. It can move in all directions and shoot.</p>"},{"location":"Web/developperGuide/#enemy","title":"Enemy","text":"<p>The enemy is an entity that moves in a predefined path and shoots at the player.</p>"},{"location":"Web/developperGuide/#level-editor","title":"Level Editor","text":"<p>The level editor is a tool that allows the user to create levels for the game. It will be used to create the levels of the game.</p>"},{"location":"Web/developperGuide/#controls","title":"Controls","text":"Left click Place and remove an entity Left arrow Move the camera left Right arrow Move the camera right L Key Load map S Key Save map"},{"location":"Web/userGuide/","title":"AREA User Guide","text":""},{"location":"Web/userGuide/#introduction","title":"Introduction","text":"<p>Welcome to Area! This comprehensive user guide is designed to help you make the most out of our application. Whether you're a new user or seeking to explore advanced features, this guide will provide step-by-step instructions, tips, and insights to enhance your experience.</p>"},{"location":"Web/userGuide/#about-area","title":"About Area","text":"<p>The goal of this project is to discover, as a whole, the software platform that you have chosen through the creation of a business application.</p> <p>To do this, you must implement a software suite that functions similar to that of IFTTT and/or Zapier. This software suite will be broken into three parts :</p> <p>\u2022 An application server to implement all the features listed below (see Features)</p> <p>\u2022 A web client to use the application from your browser by querying the application server</p> <p>\u2022 A mobile client to use the application from your phone by querying the application server</p>"},{"location":"Web/userGuide/#how-to-use-this-guide","title":"How to Use This Guide","text":"<p>This user guide is organized into sections, each focusing on a specific aspect of Area. Use the following table of contents to navigate to the topics that interest you the most:</p> <ul> <li> <p>Section 1: Prerequisites</p> <p>Learn how to install dependencies and prerequisites for launch Area web site.</p> </li> <li> <p>Section 2: Installation</p> <p>Install all dependencies for server and web.</p> </li> <li> <p>Section 3: Getting Started</p> <p>Dive into the key features of Area, with step-by-step instructions on how to use them effectively. This section guides you step by step on how to use Area.</p> <ul> <li>Register</li> <li>Dashboard</li> <li>Manages accounts</li> </ul> </li> </ul>"},{"location":"Web/userGuide/#prerequisites","title":"Prerequisites","text":"<p>Before you begin, make sure you have the following installed:</p> <ul> <li>Node.js</li> <li>Yarn</li> </ul> <p>For MacOS use Hombrew:</p> <pre><code>/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n\nbrew install node\n\nbrew install yarn\n</code></pre>"},{"location":"Web/userGuide/#installation","title":"Installation","text":"<ol> <li> <p>Clone the repository: <pre><code>git clone git@github.com:EpitechPromo2026/B-DEV-500-MAR-5-2-area-thibault.avon.git\ncd B-DEV-500-MAR-5-2-area-thibault.avon\n</code></pre></p> </li> <li> <p>Install dependencies for API: <pre><code>cd AREA-API\nyarn\n</code></pre></p> </li> <li> <p>Install dependencies for Web:</p> <p>Open another terminal and past: <pre><code>cd AREA-WEB\nyarn\n</code></pre></p> </li> <li> <p>Running server:</p> <p>On AREA-API, run: <pre><code>yarn dev\n</code></pre></p> </li> <li> <p>Running Web page:</p> <p>On AREA-WEB, run: <pre><code>yarn start\n</code></pre></p> </li> </ol>"},{"location":"Web/userGuide/#getting-started","title":"Getting Started","text":"<p>You will arrive on this page:</p> <p></p>"},{"location":"Web/userGuide/#register","title":"Register","text":"<p>Register a account. You can use your email adress, Facebook or Gmail:</p> <p></p>"},{"location":"Web/userGuide/#dashboard","title":"Dashboard","text":"<p>The dashboard is presented as follows:</p> <p></p> <p>You can create a action in button \"Create action\"</p> <p></p> <p>In this section:</p> <ul> <li> <p>Name: how you name your action.</p> </li> <li> <p>Description: a brief description on your action.</p> </li> <li> <p>Reaction: you can add as many reactions as you want. Just press the 'Add new reaction' button.</p> </li> </ul> <p>You can add as many Actions / Reactions as you want, and you can activate or not this actions:</p> <p></p> <p>Customize it as you wish.</p> <p>NOTE: you MUST be connected to the various services to perform actions/reactions. See Manages accounts page.</p>"},{"location":"Web/userGuide/#manages-accounts","title":"Manages accounts","text":"<p>This page allows you to connect to the various services offered by Area. It is presented as follows:</p> <p></p> <p>Click on \"Connect\" for uses services.</p>"}]}